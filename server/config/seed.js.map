{"version":3,"sources":["config/seed.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"config/seed.js","sourcesContent":["// /**\n//  * Populate DB with sample data on server start\n//  * to disable, edit config/environment/index.js, and set `seedDB: false`\n//  */\n\n// 'use strict';\n// import Thing from '../api/thing/thing.model';\n// import User from '../api/user/user.model';\n\n// Thing.find({}).remove()\n//   .then(() => {\n//     Thing.create({\n//       name: 'Development Tools',\n//       info: 'Integration with popular tools such as Webpack, Gulp, Babel, TypeScript, Karma, '\n//             + 'Mocha, ESLint, Node Inspector, Livereload, Protractor, Pug, '\n//             + 'Stylus, Sass, and Less.'\n//     }, {\n//       name: 'Server and Client integration',\n//       info: 'Built with a powerful and fun stack: MongoDB, Express, '\n//             + 'AngularJS, and Node.'\n//     }, {\n//       name: 'Smart Build System',\n//       info: 'Build system ignores `spec` files, allowing you to keep '\n//             + 'tests alongside code. Automatic injection of scripts and '\n//             + 'styles into your index.html'\n//     }, {\n//       name: 'Modular Structure',\n//       info: 'Best practice client and server structures allow for more '\n//             + 'code reusability and maximum scalability'\n//     }, {\n//       name: 'Optimized Build',\n//       info: 'Build process packs up your templates as a single JavaScript '\n//             + 'payload, minifies your scripts/css/images, and rewrites asset '\n//             + 'names for caching.'\n//     }, {\n//       name: 'Deployment Ready',\n//       info: 'Easily deploy your app to Heroku or Openshift with the heroku '\n//             + 'and openshift subgenerators'\n//     });\n//   });\n\n// User.find({}).remove()\n//   .then(() => {\n//     User.create({\n//       provider: 'local',\n//       name: 'Test User',\n//       email: 'test@example.com',\n//       password: 'test'\n//     }, {\n//       provider: 'local',\n//       role: 'admin',\n//       name: 'Admin',\n//       email: 'admin@example.com',\n//       password: 'admin'\n//     })\n//     .then(() => {\n//       console.log('finished populating users');\n//     });\n//   });\n"],"sourceRoot":"/source/"}