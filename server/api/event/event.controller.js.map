{"version":3,"sources":["api/event/event.controller.js"],"names":["index","show","create","upsert","update","register","patch","destroy","respondWithResult","res","statusCode","entity","status","json","patchUpdates","patches","apply","err","reject","save","removeEntity","remove","then","end","handleEntityNotFound","handleError","send","req","find","exec","catch","findById","params","id","isRegistered","event","registered","user","equals","_id","console","log","body","eventCategory","events","push","findOneAndUpdate","new","setDefaultsOnInsert","runValidators","name","info","faq","rules","awards","date","Date","startTime","endTime","venue","poster"],"mappings":"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","file":"api/event/event.controller.js","sourcesContent":["/**\n * Using Rails-like standard naming convention for endpoints.\n * GET     /api/events              ->  index\n * POST    /api/events              ->  create\n * GET     /api/events/:id          ->  show\n * PUT     /api/events/:id          ->  upsert\n * PATCH   /api/events/:id          ->  patch\n * DELETE  /api/events/:id          ->  destroy\n */\n\n'use strict';\n\nimport jsonpatch from 'fast-json-patch';\nimport Event from './event.model';\nimport EventCategory from '../eventCategory/eventCategory.model';\n\nfunction respondWithResult(res, statusCode) {\n  statusCode = statusCode || 200;\n  return function(entity) {\n    if(entity) {\n      return res.status(statusCode).json(entity);\n    }\n    return null;\n  };\n}\n\nfunction patchUpdates(patches) {\n  return function(entity) {\n    try {\n      jsonpatch.apply(entity, patches, /*validate*/ true);\n    } catch(err) {\n      return Promise.reject(err);\n    }\n\n    return entity.save();\n  };\n}\n\nfunction removeEntity(res) {\n  return function(entity) {\n    if(entity) {\n      return entity.remove()\n        .then(() => {\n          res.status(204).end();\n        });\n    }\n  };\n}\n\nfunction handleEntityNotFound(res) {\n  return function(entity) {\n    if(!entity) {\n      res.status(404).end();\n      return null;\n    }\n    return entity;\n  };\n}\n\nfunction handleError(res, statusCode) {\n  statusCode = statusCode || 500;\n  return function(err) {\n    res.status(statusCode).send(err);\n  };\n}\n\n// Gets a list of Events\nexport function index(req, res) {\n  return Event.find().exec()\n    .then(respondWithResult(res))\n    .catch(handleError(res));\n}\n\n// Gets a single Event from the DB\nexport function show(req, res) {\n  return Event.findById(req.params.id).exec()\n    .then(handleEntityNotFound(res))\n    .then(event => {\n      var isRegistered = false;\n      isRegistered = event.registered.find(function(user){\n        if(user.user.equals(req.user._id))\n          return true;\n        return false;\n      })\n      return res.json({event:event, isRegistered: isRegistered});\n    })\n    .catch(handleError(res));\n}\n\n// Creates a new Event in the DB\nexport function create(req, res) {\n  console.log(req.body);\n  return Event.create(req.body)\n    .then(event=>{\n      EventCategory.findById(event.eventCategory)\n      .exec()\n      .then(handleEntityNotFound(res))\n      .then(eventCategory=>{\n        console.log(eventCategory);\n        eventCategory.events.push({event:event._id});\n        eventCategory.save()\n        .then(respondWithResult(res, 201))\n        .catch(handleError(res));\n      })\n      .catch(handleError(res));\n    })\n    .catch(handleError(res));\n}\n\n// Upserts the given Event in the DB at the specified ID\nexport function upsert(req, res) {\n  if(req.body._id) {\n    delete req.body._id;\n  }\n  console.log(req.body);\n  return Event.findOneAndUpdate(req.params.id, req.body, {upsert: true, new:true, setDefaultsOnInsert: true, runValidators: true}).exec()\n\n    .then(respondWithResult(res))\n    .catch(handleError(res));\n}\n\nexport function update(req, res) {\n  if(req.body._id) {\n    delete req.body._id;\n  }\n  return Event.findById(req.params.id).exec()\n    .then(handleEntityNotFound(res))\n    .then(event=>{\n    event.name=req.body.name;\n    event.info=req.body.info;\n    event.faq=req.body.faq;\n    event.rules=req.body.rules;\n    event.awards=req.body.awards;\n    event.date=new Date(req.body.date)\n    event.startTime=new Date(req.body.startTime)\n    event.endTime=new Date(req.body.endTime);\n    event.venue=req.body.venue;\n    event.poster=req.body.poster;\n    event.save()\n    .then(respondWithResult(res))\n    .catch(handleError(res));\n    })\n    .catch(handleError(res));\n}\n\nexport function register (req, res){\n  return Event.findById(req.params.id)\n  .exec()\n  .then( event =>{\n    event.registered.push({user:req.user._id});\n    event.save()\n    .then(respondWithResult(res))\n    .catch(handleError(res));\n  })\n  .catch(handleError(res));\n}\n// Updates an existing Event in the DB\nexport function patch(req, res) {\n  if(req.body._id) {\n    delete req.body._id;\n  }\n  return Event.findById(req.params.id).exec()\n    .then(handleEntityNotFound(res))\n    .then(patchUpdates(req.body))\n    .then(respondWithResult(res))\n    .catch(handleError(res));\n}\n\n// Deletes a Event from the DB\nexport function destroy(req, res) {\n  return Event.findById(req.params.id).exec()\n    .then(handleEntityNotFound(res))\n    .then(removeEntity(res))\n    .catch(handleError(res));\n}\n"],"sourceRoot":"/source/"}