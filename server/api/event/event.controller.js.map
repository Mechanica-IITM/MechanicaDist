{"version":3,"sources":["api/event/event.controller.js"],"names":["index","show","isRegistered","create","upsert","update","register","patch","destroy","respondWithResult","res","statusCode","entity","status","json","patchUpdates","patches","apply","err","reject","save","removeEntity","remove","then","end","handleEntityNotFound","handleError","console","log","send","req","find","exec","catch","params","id","isMongoId","findById","event","registered","user","equals","_id","body","eventCategory","events","push","findOneAndUpdate","new","setDefaultsOnInsert","runValidators","name","info","faq","rules","awards","date","Date","startTime","endTime","venue","poster","contact","problemStatement","paylink"],"mappings":"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","file":"api/event/event.controller.js","sourcesContent":["/**\n * Using Rails-like standard naming convention for endpoints.\n * GET     /api/events              ->  index\n * POST    /api/events              ->  create\n * GET     /api/events/:id          ->  show\n * PUT     /api/events/:id          ->  upsert\n * PATCH   /api/events/:id          ->  patch\n * DELETE  /api/events/:id          ->  destroy\n */\n\n'use strict';\n\nimport jsonpatch from 'fast-json-patch';\nimport validator from 'validator';\nimport Event from './event.model';\nimport EventCategory from '../eventCategory/eventCategory.model';\n\nfunction respondWithResult(res, statusCode) {\n  statusCode = statusCode || 200;\n  return function(entity) {\n    if(entity) {\n      return res.status(statusCode).json(entity);\n    }\n    return null;\n  };\n}\n\nfunction patchUpdates(patches) {\n  return function(entity) {\n    try {\n      jsonpatch.apply(entity, patches, /*validate*/ true);\n    } catch(err) {\n      return Promise.reject(err);\n    }\n\n    return entity.save();\n  };\n}\n\nfunction removeEntity(res) {\n  return function(entity) {\n    if(entity) {\n      return entity.remove()\n        .then(() => {\n          res.status(204).end();\n        });\n    }\n  };\n}\n\nfunction handleEntityNotFound(res) {\n  return function(entity) {\n    if(!entity) {\n      res.status(404).end();\n      return null;\n    }\n    return entity;\n  };\n}\n\nfunction handleError(res, statusCode) {\n  statusCode = statusCode || 500;\n  return function(err) {\n    console.log(err);\n    res.status(statusCode).send(err);\n  };\n}\n\n// Gets a list of Events\nexport function index(req, res) {\n  return Event.find().exec()\n    .then(respondWithResult(res))\n    .catch(handleError(res));\n}\n\n// Gets a single Event from the DB\nexport function show(req, res) {\n  console.log(req.params.id);\n \n  if(!validator.isMongoId(req.params.id+''))\n    return res.status(400).send(\"Invalid Id\");\n\n  return Event.findById(req.params.id).exec()\n    .then(handleEntityNotFound(res))\n    .then(respondWithResult(res))\n    .catch(handleError(res));\n}\n\n// Gets a single Event from the DB\nexport function isRegistered(req, res) {\n  \n  if(!validator.isMongoId(req.params.id+''))\n    return res.status(400).send(\"Invalid Id\");\n\n  return Event.findById(req.params.id).exec()\n    .then(handleEntityNotFound(res))\n    .then(event => {\n      var isRegistered = false;\n      isRegistered = event.registered.find(function(user){\n        if(user.user.equals(req.user._id))\n          return true;\n        return false;\n      })\n      return res.json(isRegistered);\n    })\n    .catch(handleError(res));\n}\n\n// Creates a new Event in the DB\nexport function create(req, res) {\n  console.log(req.body);\n  return Event.create(req.body)\n    .then(event=>{\n      EventCategory.findById(event.eventCategory)\n      .exec()\n      .then(handleEntityNotFound(res))\n      .then(eventCategory=>{\n        console.log(eventCategory);\n        eventCategory.events.push({event:event._id});\n        eventCategory.save()\n        .then(respondWithResult(res, 201))\n        .catch(handleError(res));\n      })\n      .catch(handleError(res));\n    })\n    .catch(handleError(res));\n}\n\n// Upserts the given Event in the DB at the specified ID\nexport function upsert(req, res) {\n  if(req.body._id) {\n    delete req.body._id;\n  }\n  console.log(req.body);\n  return Event.findOneAndUpdate(req.params.id, req.body, {upsert: true, new:true, setDefaultsOnInsert: true, runValidators: true}).exec()\n\n    .then(respondWithResult(res))\n    .catch(handleError(res));\n}\n\nexport function update(req, res) {\n  if(req.body._id) {\n    delete req.body._id;\n  }\n  if(!validator.isMongoId(req.params.id+''))\n    return res.status(400).send(\"Invalid Id\");\n\n  return Event.findById(req.params.id).exec()\n    .then(handleEntityNotFound(res))\n    .then(event=>{\n    event.name=req.body.name;\n    event.info=req.body.info;\n    event.faq=req.body.faq;\n    event.rules=req.body.rules;\n    event.awards=req.body.awards;\n    event.date=new Date(req.body.date)\n    event.startTime=new Date(req.body.startTime)\n    event.endTime=new Date(req.body.endTime);\n    event.venue=req.body.venue;\n    event.poster=req.body.poster;\n    event.contact=req.body.contact;\n    event.problemStatement=req.body.problemStatement;\n    event.paylink=req.body.paylink;\n    event.save()\n    .then(respondWithResult(res))\n    .catch(handleError(res));\n    })\n    .catch(handleError(res));\n}\n\nexport function register (req, res){\n  if(!validator.isMongoId(req.params.id+''))\n    return res.status(400).send(\"Invalid Id\");\n  \n  return Event.findById(req.params.id)\n  .exec()\n  .then( event =>{\n    event.registered.push({user:req.user._id});\n    event.save()\n    .then(respondWithResult(res))\n    .catch(handleError(res));\n  })\n  .catch(handleError(res));\n}\n// Updates an existing Event in the DB\nexport function patch(req, res) {\n  if(req.body._id) {\n    delete req.body._id;\n  }\n  return Event.findById(req.params.id).exec()\n    .then(handleEntityNotFound(res))\n    .then(patchUpdates(req.body))\n    .then(respondWithResult(res))\n    .catch(handleError(res));\n}\n\n// Deletes a Event from the DB\nexport function destroy(req, res) {\n  return Event.findById(req.params.id).exec()\n    .then(handleEntityNotFound(res))\n    .then(removeEntity(res))\n    .catch(handleError(res));\n}\n"],"sourceRoot":"/source/"}