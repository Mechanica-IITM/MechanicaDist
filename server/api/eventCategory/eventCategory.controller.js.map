{"version":3,"sources":["api/eventCategory/eventCategory.controller.js"],"names":["index","show","create","upsert","update","patch","destroy","respondWithResult","res","statusCode","entity","status","json","patchUpdates","patches","apply","err","reject","save","removeEntity","remove","then","end","handleEntityNotFound","handleError","send","req","find","populate","exec","catch","isMongoId","params","id","findById","body","_id","findOneAndUpdate","setDefaultsOnInsert","runValidators","eventCategory","name","info","imgURL"],"mappings":"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","file":"api/eventCategory/eventCategory.controller.js","sourcesContent":["/**\n * Using Rails-like standard naming convention for endpoints.\n * GET     /api/eventCategorys              ->  index\n * POST    /api/eventCategorys              ->  create\n * GET     /api/eventCategorys/:id          ->  show\n * PUT     /api/eventCategorys/:id          ->  upsert\n * PATCH   /api/eventCategorys/:id          ->  patch\n * DELETE  /api/eventCategorys/:id          ->  destroy\n */\n\n'use strict';\n\nimport jsonpatch from 'fast-json-patch';\nimport validator from 'validator';\nimport EventCategory from './eventCategory.model';\n\nfunction respondWithResult(res, statusCode) {\n  statusCode = statusCode || 200;\n  return function(entity) {\n    if(entity) {\n      return res.status(statusCode).json(entity);\n    }\n    return null;\n  };\n}\n\nfunction patchUpdates(patches) {\n  return function(entity) {\n    try {\n      jsonpatch.apply(entity, patches, /*validate*/ true);\n    } catch(err) {\n      return Promise.reject(err);\n    }\n\n    return entity.save();\n  };\n}\n\nfunction removeEntity(res) {\n  return function(entity) {\n    if(entity) {\n      return entity.remove()\n        .then(() => {\n          res.status(204).end();\n        });\n    }\n  };\n}\n\nfunction handleEntityNotFound(res) {\n  return function(entity) {\n    if(!entity) {\n      res.status(404).end();\n      return null;\n    }\n    return entity;\n  };\n}\n\nfunction handleError(res, statusCode) {\n  statusCode = statusCode || 500;\n  return function(err) {\n    res.status(statusCode).send(err);\n  };\n}\n\n// Gets a list of EventCategorys\nexport function index(req, res) {\n  return EventCategory.find().populate('events.event').exec()\n    .then(respondWithResult(res))\n    .catch(handleError(res));\n}\n\n// Gets a single EventCategory from the DB\nexport function show(req, res) {\n  if(!validator.isMongoId(req.params.id+''))\n    return res.status(400).send(\"Invalid Id\");\n\n  return EventCategory.findById(req.params.id).exec()\n    .then(handleEntityNotFound(res))\n    .then(respondWithResult(res))\n    .catch(handleError(res));\n}\n\n// Creates a new EventCategory in the DB\nexport function create(req, res) {\n  return EventCategory.create(req.body)\n    .then(respondWithResult(res, 201))\n    .catch(handleError(res));\n}\n\n// Upserts the given EventCategory in the DB at the specified ID\nexport function upsert(req, res) {\n  if(req.body._id) {\n    delete req.body._id;\n  }\n  return EventCategory.findOneAndUpdate(req.params.id, req.body, {upsert: true, setDefaultsOnInsert: true, runValidators: true}).exec()\n\n    .then(respondWithResult(res))\n    .catch(handleError(res));\n}\nexport function update(req, res) {\n  if(req.body._id) {\n    delete req.body._id;\n  }\n  if(!validator.isMongoId(req.params.id+''))\n    return res.status(400).send(\"Invalid Id\");\n\n  return EventCategory.findById(req.params.id).exec()\n    .then(handleEntityNotFound(res))\n    .then(eventCategory=>{\n    eventCategory.name=req.body.name;\n    eventCategory.info=req.body.info;\n    eventCategory.imgURL=req.body.imgURL;\n    eventCategory.save()\n    .then(respondWithResult(res))\n    .catch(handleError(res));\n    })\n    .catch(handleError(res));\n}\n\n\n// Updates an existing EventCategory in the DB\nexport function patch(req, res) {\n  if(req.body._id) {\n    delete req.body._id;\n  }\n  return EventCategory.findById(req.params.id).exec()\n    .then(handleEntityNotFound(res))\n    .then(patchUpdates(req.body))\n    .then(respondWithResult(res))\n    .catch(handleError(res));\n}\n\n// Deletes a EventCategory from the DB\nexport function destroy(req, res) {\n  return EventCategory.findById(req.params.id).exec()\n    .then(handleEntityNotFound(res))\n    .then(removeEntity(res))\n    .catch(handleError(res));\n}\n"],"sourceRoot":"/source/"}