{"version":3,"sources":["api/user/user.controller.js"],"names":["index","create","setHighScore","getHighScore","show","destroy","changePassword","me","authCallback","validationError","res","statusCode","err","status","json","handleError","send","respondWithResult","entity","req","find","exec","then","users","catch","body","rollNumber","split","join","toUpperCase","console","log","findOne","newUser","house","_id","provider","role","save","user","token","sign","secrets","session","expiresIn","next","highscore","score","sort","limit","userId","params","id","findById","end","profile","findByIdAndRemove","oldPass","String","oldPassword","newPass","newPassword","authenticate","password","populate","redirect"],"mappings":"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","file":"api/user/user.controller.js","sourcesContent":["'use strict';\n\nimport User from './user.model';\nimport House from '../house/house.model';\nimport config from '../../config/environment';\nimport jwt from 'jsonwebtoken';\n\nfunction validationError(res, statusCode) {\n  statusCode = statusCode || 422;\n  return function(err) {\n    return res.status(statusCode).json(err);\n  };\n}\n\nfunction handleError(res, statusCode) {\n  statusCode = statusCode || 500;\n  return function(err) {\n    return res.status(statusCode).send(err);\n  };\n}\n\nfunction respondWithResult(res, statusCode) {\n  statusCode = statusCode || 200;\n  return function(entity) {\n    if(entity) {\n      return res.status(statusCode).json(entity);\n    }\n    return null;\n  };\n}\n\n/**\n * Get list of users\n * restriction: 'admin'\n */\nexport function index(req, res) {\n  return User.find({}, '-salt -password').exec()\n    .then(users => {\n      res.status(200).json(users);\n    })\n    .catch(handleError(res));\n}\n\n/**\n * Creates a new user\n */\nexport function create(req, res) {\n\n  if(req.body.rollNumber){\n    var rollNumber = req.body.rollNumber.split(' ');\n    rollNumber = rollNumber.join('').toUpperCase();\n    console.log(rollNumber,222222);\n    House.findOne({ \"team.member\": rollNumber})\n    .exec()\n    .then(house=>{\n\n      var newUser = new User(req.body);\n      console.log(house, 32333333333);\n\n      if(house)\n        newUser.house = house._id;\n\n      newUser.provider = 'local';\n      newUser.role = 'user';\n      newUser.save()\n        .then(function(user) {\n          var token = jwt.sign({ _id: user._id }, config.secrets.session, {\n            expiresIn: 60 * 60 * 5\n          });\n          res.json({ token });\n        })\n        .catch(validationError(res));\n    })\n  }\n  else\n    return res.send(400);\n}\n\nexport function setHighScore(req, res, next){\n  if(req.user.highscore<req.body.score)\n    req.user.highscore = req.body.score;\n  req.user.save()\n  .then(respondWithResult(res))\n  .catch(handleError(res));\n}\n\nexport function getHighScore(req, res, next){\n  User.find({}, 'name highscore college').sort({highscore:-1}).limit(3)\n  .then(respondWithResult(res))\n  .catch(handleError(res));  \n}\n/**\n * Get a single user\n */\nexport function show(req, res, next) {\n  var userId = req.params.id;\n\n  return User.findById(userId).exec()\n    .then(user => {\n      if(!user) {\n        return res.status(404).end();\n      }\n      res.json(user.profile);\n    })\n    .catch(err => next(err));\n}\n\n/**\n * Deletes a user\n * restriction: 'admin'\n */\nexport function destroy(req, res) {\n  return User.findByIdAndRemove(req.params.id).exec()\n    .then(function() {\n      res.status(204).end();\n    })\n    .catch(handleError(res));\n}\n\n/**\n * Change a users password\n */\nexport function changePassword(req, res) {\n  var userId = req.user._id;\n  var oldPass = String(req.body.oldPassword);\n  var newPass = String(req.body.newPassword);\n\n  return User.findById(userId).exec()\n    .then(user => {\n      if(user.authenticate(oldPass)) {\n        user.password = newPass;\n        return user.save()\n          .then(() => {\n            res.status(204).end();\n          })\n          .catch(validationError(res));\n      } else {\n        return res.status(403).end();\n      }\n    });\n}\n\n/**\n * Get my info\n */\nexport function me(req, res, next) {\n  var userId = req.user._id;\n\n  return User.findOne({ _id: userId }, '-salt -password').populate('house').exec()\n    .then(user => { // don't ever give out the password or salt\n      if(!user) {\n        return res.status(401).end();\n      }\n      res.json(user);\n    })\n    .catch(err => next(err));\n}\n/**\n * Authentication callback\n */\nexport function authCallback(req, res) {\n  res.redirect('/');\n}\n"],"sourceRoot":"/source/"}